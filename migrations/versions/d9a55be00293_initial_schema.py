"""Initial schema

Revision ID: d9a55be00293
Revises: 
Create Date: 2025-05-14 14:28:25.294121

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd9a55be00293'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('courts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('deadline_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('hour_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_type', sa.String(length=20), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('practice_areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('recurrence_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('rrule', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('nickname', sa.String(length=10), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('profile_image', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=200), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('number_interno', sa.String(length=50), nullable=True),
    sa.Column('nif', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_clientname')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_type', sa.String(length=50), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('horas_adicao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=20), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('horas_adicionadas', sa.Float(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('extra_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['case_type_id'], ['case_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assuntos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['completed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('billing_notas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.Enum('tarefa', 'prazo', name='billing_source'), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('total_hours', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cliente_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_shares',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('option', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('client_id', 'user_id')
    )
    op.create_table('documentos_contabilisticos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('numero', sa.String(length=50), nullable=True),
    sa.Column('advogado', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('data_emissao', sa.Date(), nullable=True),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=False),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('status_cobranca', sa.String(length=50), nullable=True),
    sa.Column('numero_recibo', sa.String(length=50), nullable=True),
    sa.Column('data_vencimento', sa.Date(), nullable=True),
    sa.Column('numero_cliente', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('processos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('case_type_id', sa.Integer(), nullable=True),
    sa.Column('phase_id', sa.Integer(), nullable=True),
    sa.Column('practice_area_id', sa.Integer(), nullable=False),
    sa.Column('court_id', sa.Integer(), nullable=False),
    sa.Column('lead_attorney_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('opposing_party', sa.String(length=255), nullable=True),
    sa.Column('value_estimate', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('opened_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['case_type_id'], ['case_types.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['court_id'], ['courts.id'], ),
    sa.ForeignKeyConstraint(['lead_attorney_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['phase_id'], ['phases.id'], ),
    sa.ForeignKeyConstraint(['practice_area_id'], ['practice_areas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    with op.batch_alter_table('processos', schema=None) as batch_op:
        batch_op.create_index('ix_processos_ext', ['external_id'], unique=False)

    op.create_table('shared_clients',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'client_id')
    )
    op.create_table('assunto_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assunto_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('serialized_data', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['assunto_id'], ['assuntos.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assunto_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assunto_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assunto_id'], ['assuntos.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('billing_nota_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nota_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['nota_id'], ['billing_notas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('billingnota_documento',
    sa.Column('documento_id', sa.Integer(), nullable=False),
    sa.Column('nota_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['documento_id'], ['documentos_contabilisticos.id'], ),
    sa.ForeignKeyConstraint(['nota_id'], ['billing_notas.id'], ),
    sa.PrimaryKeyConstraint('documento_id', 'nota_id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processo_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['processo_id'], ['processos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hearings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processo_id', sa.Integer(), nullable=False),
    sa.Column('when', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('judge', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['processo_id'], ['processos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prazos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processo_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('recur_rule_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('hours_spent', sa.Float(), nullable=True),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.Column('reminder_offset', sa.Interval(), nullable=True),
    sa.Column('calendar_event_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['processo_id'], ['processos.id'], ),
    sa.ForeignKeyConstraint(['recur_rule_id'], ['recurrence_rules.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['deadline_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process_co_counsel',
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.Column('attorney_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attorney_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['processos.id'], ),
    sa.PrimaryKeyConstraint('process_id', 'attorney_id')
    )
    op.create_table('process_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processo_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['processo_id'], ['processos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process_tags',
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['process_id'], ['processos.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('process_id', 'tag_id')
    )
    op.create_table('processo_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processo_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('snapshot', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['processo_id'], ['processos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shared_assuntos',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assunto_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assunto_id'], ['assuntos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'assunto_id')
    )
    op.create_table('shared_processes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['process_id'], ['processos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'process_id')
    )
    op.create_table('tarefas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('assunto_id', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('hours_estimate', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('reminder_offset', sa.Integer(), nullable=True),
    sa.Column('calendar_event_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assunto_id'], ['assuntos.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nota_honorarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tarefa_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('total_hours', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tarefa_id'], ['tarefas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prazo_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prazo_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('snapshot', sa.JSON(), nullable=True),
    sa.Column('detail', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prazo_id'], ['prazos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prazo_nota_honorarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prazo_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('total_hours', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prazo_id'], ['prazos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shared_prazos',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('prazo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['prazo_id'], ['prazos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'prazo_id')
    )
    op.create_table('shared_tarefas',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tarefa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tarefa_id'], ['tarefas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tarefa_id')
    )
    op.create_table('tarefa_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tarefa_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tarefa_id'], ['tarefas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tarefas_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tarefa_id', sa.Integer(), nullable=False),
    sa.Column('serialized_data', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('detail', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tarefa_id'], ['tarefas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nota_honorarios_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nota_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['nota_id'], ['nota_honorarios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prazo_billing_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prazo_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('external_billing_id', sa.String(length=255), nullable=True),
    sa.Column('invoiced', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['history_id'], ['prazo_history.id'], ),
    sa.ForeignKeyConstraint(['prazo_id'], ['prazos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prazo_nota_honorarios_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nota_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['nota_id'], ['prazo_nota_honorarios.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tarefa_billing_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tarefa_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('invoiced', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['history_id'], ['tarefas_history.id'], ),
    sa.ForeignKeyConstraint(['tarefa_id'], ['tarefas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tarefa_billing_items')
    op.drop_table('prazo_nota_honorarios_item')
    op.drop_table('prazo_billing_items')
    op.drop_table('nota_honorarios_item')
    op.drop_table('tarefas_history')
    op.drop_table('tarefa_notes')
    op.drop_table('shared_tarefas')
    op.drop_table('shared_prazos')
    op.drop_table('prazo_nota_honorarios')
    op.drop_table('prazo_history')
    op.drop_table('nota_honorarios')
    op.drop_table('tarefas')
    op.drop_table('shared_processes')
    op.drop_table('shared_assuntos')
    op.drop_table('processo_history')
    op.drop_table('process_tags')
    op.drop_table('process_notes')
    op.drop_table('process_co_counsel')
    op.drop_table('prazos')
    op.drop_table('hearings')
    op.drop_table('documents')
    op.drop_table('billingnota_documento')
    op.drop_table('billing_nota_items')
    op.drop_table('assunto_notes')
    op.drop_table('assunto_history')
    op.drop_table('shared_clients')
    with op.batch_alter_table('processos', schema=None) as batch_op:
        batch_op.drop_index('ix_processos_ext')

    op.drop_table('processos')
    op.drop_table('documentos_contabilisticos')
    op.drop_table('client_shares')
    op.drop_table('billing_notas')
    op.drop_table('assuntos')
    op.drop_table('phases')
    op.drop_table('notifications')
    op.drop_table('horas_adicao')
    op.drop_table('comments')
    op.drop_table('clients')
    op.drop_table('audit_logs')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('recurrence_rules')
    op.drop_table('practice_areas')
    op.drop_table('hour_entries')
    op.drop_table('deadline_types')
    op.drop_table('courts')
    op.drop_table('case_types')
    # ### end Alembic commands ###
